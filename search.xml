<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vue3+vite+vant搭建项目</title>
    <url>/vue3+vite+vant/</url>
    <content><![CDATA[<h2 id="vue3-vite-vant搭建项目"><a href="#vue3-vite-vant搭建项目" class="headerlink" title="vue3+vite+vant搭建项目"></a>vue3+vite+vant搭建项目</h2><p>vue3 文档 <a href="https://cn.vuejs.org/guide/introduction.html">https://cn.vuejs.org/guide/introduction.html</a><br>vite 文档 <a href="https://cn.vitejs.dev/guide/">https://cn.vitejs.dev/guide/</a><br>vant 文档 <a href="https://vant-contrib.gitee.io/vant/#/zh-CN/home">https://vant-contrib.gitee.io/vant/#/zh-CN/home</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、npm create vite my-vue-app --template vue </span><br><span class="line">// my-vue-app 项目名</span><br><span class="line">选择vue javascript</span><br><span class="line">cd my-vue-app</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br><span class="line"></span><br><span class="line">2、Vue 3 项目，安装最新版 Vant</span><br><span class="line">npm i vant</span><br><span class="line"></span><br><span class="line">3、在main.js中导入相关的组件</span><br><span class="line">// main.js 以button组件为例</span><br><span class="line">import &#123; createApp &#125; from &#x27;vue&#x27;;</span><br><span class="line">// 1. 引入你需要的组件</span><br><span class="line">import &#123; Button &#125; from &#x27;vant&#x27;;</span><br><span class="line">// 2. 引入组件样式</span><br><span class="line">import &#x27;vant/lib/index.css&#x27;;</span><br><span class="line">// 3. 注册你需要的组件</span><br><span class="line">const app = createApp();</span><br><span class="line">app.use(Button);</span><br><span class="line"></span><br><span class="line">4、集成路由</span><br><span class="line">npm install vue-router@next</span><br><span class="line">// tip:之前没装@next版本，路由是3.x版本的，不支持相关的api，所以要注意在vue3时要装@next，也就是4.x版本的路由</span><br><span class="line">新建router文件夹及index.js</span><br><span class="line">// index.js简单配置 routes和vue2定义是一样的</span><br><span class="line">import * as VueRouter from &#x27;vue-router&#x27;</span><br><span class="line">import routes from &#x27;./routes&#x27;</span><br><span class="line">const router = VueRouter.createRouter(&#123;</span><br><span class="line">  routes,</span><br><span class="line">  history: VueRouter.createWebHashHistory(),</span><br><span class="line">&#125;)</span><br><span class="line">export default router</span><br><span class="line"></span><br><span class="line">main.js中使用router</span><br><span class="line">import router from &quot;./router&quot;;</span><br><span class="line">app.use(router);</span><br><span class="line">app.mount(&quot;#app&quot;);</span><br></pre></td></tr></table></figure>

<h2 id="scss-使用安装"><a href="#scss-使用安装" class="headerlink" title="scss 使用安装"></a>scss 使用安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install sass-loader -D</span><br><span class="line">npm install node-sass -D</span><br><span class="line">npm install style-loader -S</span><br><span class="line">npm install sass -S</span><br><span class="line">vite.config.js 配置pluginOptions</span><br><span class="line">// 配置scss</span><br><span class="line"></span><br><span class="line">	pluginOptions: &#123;</span><br><span class="line">		&quot;style-resources-loader&quot;: &#123;</span><br><span class="line">			preProcessor: &quot;scss&quot;,</span><br><span class="line">			patterns: [],</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;,</span><br></pre></td></tr></table></figure>

<h2 id="Vue3-vite-js-配置别名"><a href="#Vue3-vite-js-配置别名" class="headerlink" title="Vue3+vite+js 配置别名"></a>Vue3+vite+js 配置别名</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">path模块是node.js内置的功能，但是node.js本身并不支持ts</span><br><span class="line">解决方案：安装@types/node</span><br><span class="line">npm install @types/node -D</span><br><span class="line">vite.config.js 引入path 配置别名alias</span><br><span class="line">import path from &#x27;path&#x27;</span><br><span class="line"></span><br><span class="line">export default defineConfig(&#123;</span><br><span class="line">  resolve: &#123;</span><br><span class="line"></span><br><span class="line">    // https://cn.vitejs.dev/config/#resolve-alias</span><br><span class="line">    alias: &#123;</span><br><span class="line">      // 设置路径</span><br><span class="line">      &#x27;~&#x27;: path.resolve(__dirname, &#x27;./&#x27;), // 这个 __dirname 也不报错了 ************</span><br><span class="line">      // 设置别名 这里的./指的是 vite.config.js 的所载目录（根目录）下面的 src</span><br><span class="line">      &#x27;@&#x27;: path.resolve(__dirname, &#x27;./src&#x27;)</span><br><span class="line">    &#125;,</span><br><span class="line">    // https://cn.vitejs.dev/config/#resolve-extensions</span><br><span class="line">    // extensions: [&#x27;.mjs&#x27;, &#x27;.js&#x27;, &#x27;.ts&#x27;, &#x27;.jsx&#x27;, &#x27;.tsx&#x27;, &#x27;.json&#x27;, &#x27;.vue&#x27;]</span><br><span class="line"></span><br><span class="line">  &#125;, </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="移动端适配-rem"><a href="#移动端适配-rem" class="headerlink" title="移动端适配 rem"></a>移动端适配 rem</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">postcss-pxtorem 是一款 PostCSS 插件，用于将 px 单位转化为 rem 单位</span><br><span class="line">lib-flexible 用于设置 rem 基准值</span><br><span class="line">npm install postcss-pxtorem@5.1.1 -D&#x27;</span><br><span class="line">npm i -S amfe-flexible</span><br><span class="line">根目录下新建一个postcss.config.js</span><br><span class="line">module.exports = &#123;</span><br><span class="line">	plugins: &#123;</span><br><span class="line">		// postcss-pxtorem 插件的版本需要 &gt;= 5.0.0</span><br><span class="line">		// 适用版本 5.1.1</span><br><span class="line">		// yarn add -D postcss-pxtorem@5.1.1</span><br><span class="line">		// npm install postcss-pxtorem@5.1.1 -D&#x27;</span><br><span class="line">		&quot;postcss-pxtorem&quot;: &#123;</span><br><span class="line">			rootValue(&#123; file &#125;) &#123;</span><br><span class="line">				// 判断是否是vant的文件 如果是就使用 37.5为根节点字体大小</span><br><span class="line">				// 否则使用75 因为vant使用的设计标准为375 但是市场现在的主流设置尺寸是750</span><br><span class="line">				return file.indexOf(&quot;vant&quot;) !== -1 ? 37.5 : 75;</span><br><span class="line">			&#125;,</span><br><span class="line">			// 配置哪些文件中的尺寸需要转化为rem *表示所有的都要转化 行间样式无法适配</span><br><span class="line">			propList: [&quot;*&quot;],</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;,</span><br><span class="line">&#125;;</span><br><span class="line">main.js引入</span><br><span class="line">import &#x27;amfe-flexible&#x27;</span><br><span class="line">npm run dev 启动报错了 </span><br><span class="line">1、postcss-pxtorem 版本高了</span><br><span class="line">2、module is not defined in ES module scope</span><br><span class="line">This file is being treated as an ES module because it has a &#x27;.js&#x27; file extension and &#x27;D:\Demo\viteVantVue3\my-vue-app\package.json&#x27; contains &quot;type&quot;: &quot;module&quot;. To treat it as a CommonJS script, rename it to use the &#x27;.cjs&#x27; file extension.</span><br><span class="line">postcss.config.js 修改为 postcss.config.cjs</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>vue echarts基本使用</title>
    <url>/vueUseEcharts/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;myChart&quot; id=&quot;myChart&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data()&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            chart: null,//图表实例</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    beforeDestroy() &#123;</span><br><span class="line">        //清除图表防止页面卡顿</span><br><span class="line">        this.chart &amp;&amp; this.chart.clear()</span><br><span class="line">        console.log(&#x27;清空图表数据beforeDestroy&#x27;)</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line">        this.$nextTick(() =&gt; &#123;</span><br><span class="line">            //实例化图形</span><br><span class="line">            this.setChart(&#x27;myChart&#x27;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    mounted() &#123;</span><br><span class="line">        // 4. 当我们浏览器缩放的时候，图表也等比例缩放</span><br><span class="line">        window.addEventListener(&#x27;resize&#x27;, () =&gt; &#123;</span><br><span class="line">            // 让我们的图表调用 resize这个方法</span><br><span class="line">            this.chart &amp;&amp; this.chart.resize()</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        setChart(id)&#123;</span><br><span class="line">            let chartDom = document.getElementById(id)</span><br><span class="line">            // main.js中引入echarts 挂载vue上</span><br><span class="line">            this.chart = this.$echarts.init(chartDom)</span><br><span class="line">            let option</span><br><span class="line">            option = &#123;</span><br><span class="line">                tooltip: &#123;</span><br><span class="line">                    trigger: &#x27;item&#x27;,</span><br><span class="line">                &#125;,</span><br><span class="line">                legend: &#123;</span><br><span class="line">                    top: &#x27;5%&#x27;,</span><br><span class="line">                    left: &#x27;center&#x27;,</span><br><span class="line">                &#125;,</span><br><span class="line">                graphic: &#123;</span><br><span class="line">                    type: &#x27;text&#x27;,</span><br><span class="line">                    left: &#x27;center&#x27;,</span><br><span class="line">                    top: &#x27;49%&#x27;,</span><br><span class="line">                    style: &#123;</span><br><span class="line">                        text: &#x27;饼形图统计&#x27;,</span><br><span class="line">                        textAlign: &#x27;center&#x27;,</span><br><span class="line">                        fill: &#x27;#333&#x27;,</span><br><span class="line">                        fontSize: 18,</span><br><span class="line">                        fontWeight: &#x27;bold&#x27;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                &#125;,</span><br><span class="line">                series: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        type: &#x27;pie&#x27;,</span><br><span class="line">                        radius: [&#x27;40%&#x27;, &#x27;70%&#x27;],</span><br><span class="line">                        avoidLabelOverlap: false,</span><br><span class="line">                        itemStyle: &#123;</span><br><span class="line">                            borderRadius: 10,</span><br><span class="line">                            borderColor: &#x27;#fff&#x27;,</span><br><span class="line">                            borderWidth: 2,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        label: &#123;</span><br><span class="line">                            show: true,</span><br><span class="line">                            position: &#x27;inside&#x27;,</span><br><span class="line">                            formatter: `&#123;d&#125;%`,</span><br><span class="line">                            color: &#x27;#ffffff&#x27;, //颜色</span><br><span class="line">                            fontSize: 12, //字体大小</span><br><span class="line">                        &#125;,</span><br><span class="line">                        labelLine: &#123;</span><br><span class="line">                            show: true,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        color: [&#x27;#3cca76&#x27;,&#x27;#fc5531&#x27;],</span><br><span class="line">                        data: [&#123;name: &#x27;汽车&#x27;,value: 200&#125;,&#123;name: &#x27;单车&#x27;,value: 2000&#125;],</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">            option &amp;&amp; this.chart.setOption(option)</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.myChart&#123;</span><br><span class="line">    width: 600px;</span><br><span class="line">    height: 600px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>echarts 官网 <a href="https://echarts.apache.org/zh/index.html">https://echarts.apache.org/zh/index.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>vue 长列表</title>
    <url>/vueLongList/</url>
    <content><![CDATA[<iframe src="/pages/longList.html" style="width: 100%;height: 420px;background: #ffffff;margin-top: 20px;border:none;"></iframe> 
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">        &lt;title&gt;vue 长列表&lt;/title&gt;</span><br><span class="line">        &lt;script src=&quot;https://unpkg.com/vue@3.0.5/dist/vue.global.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">        &lt;style&gt;</span><br><span class="line">            .container &#123;</span><br><span class="line">                width: 100%;</span><br><span class="line">                max-height: 400px;</span><br><span class="line">                overflow-y: auto;</span><br><span class="line">            &#125;</span><br><span class="line">            .box-wrap &#123;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                position: relative;</span><br><span class="line">            &#125;</span><br><span class="line">            .item &#123;</span><br><span class="line">                width: 100%;</span><br><span class="line">                position: absolute;</span><br><span class="line">                top: 0;</span><br><span class="line">                left: 0;</span><br><span class="line">                border-bottom: 1px solid #f1f1f1;</span><br><span class="line">                line-height: 32px;</span><br><span class="line">                font-size: 12px;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;container&quot; @scroll=&quot;listScroll&quot; ref=&quot;listEl&quot;&gt;</span><br><span class="line">                &lt;ul :style=&quot;[&#123; height: totalHeight + &#x27;px&#x27; &#125;]&quot; class=&quot;box-wrap&quot;&gt;</span><br><span class="line">                    &lt;li v-for=&quot;item in list&quot; :key=&quot;item.value&quot; class=&quot;item&quot; :style=&quot;&#123; transform: `translateY($&#123;item.position&#125;px`&#125;&quot;&gt;</span><br><span class="line">                        &#123;&#123; item.label &#125;&#125;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const &#123;</span><br><span class="line">            createApp,</span><br><span class="line">            reactive,</span><br><span class="line">            toRefs,</span><br><span class="line">            ref,</span><br><span class="line">            onMounted,</span><br><span class="line">            computed,</span><br><span class="line">            nextTick</span><br><span class="line">        &#125; = Vue</span><br><span class="line">        const app = createApp(&#123;</span><br><span class="line">            setup() &#123;</span><br><span class="line">                let longList = []</span><br><span class="line">                for (let i = 0; i &lt; 100000; i++) &#123;</span><br><span class="line">                    const value = `$&#123;</span><br><span class="line">                        i.toString(36)</span><br><span class="line">                    &#125;$&#123;i&#125;`;</span><br><span class="line">                    longList.push(&#123;value, label: value&#125;);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                const state = reactive(&#123;listEl: ref(null), list: []&#125;);</span><br><span class="line"></span><br><span class="line">                // 每一项的高度</span><br><span class="line">                const itemHeight = 32;</span><br><span class="line">                // 总的高度</span><br><span class="line">                const totalHeight = computed(() =&gt; &#123;</span><br><span class="line">                    return longList.length * itemHeight;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                onMounted(() =&gt; &#123;</span><br><span class="line">                    if (state.listEl) &#123;</span><br><span class="line">                        nextTick(() =&gt; &#123;</span><br><span class="line">                            methods.listScroll();</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line"></span><br><span class="line">                const methods = &#123; </span><br><span class="line">                    // 长列表</span><br><span class="line">                    listScroll() &#123;</span><br><span class="line">                        let scrollTop = state.listEl.scrollTop;</span><br><span class="line">                        let height = state.listEl.clientHeight;</span><br><span class="line">                        // 获取到要截取数据的起点</span><br><span class="line">                        let startIndex = Math.floor(scrollTop / itemHeight);</span><br><span class="line">                        // 获取到要截取数据的终点</span><br><span class="line">                        let endIndex = Math.ceil((scrollTop + height) / itemHeight);</span><br><span class="line">                        let scrollPos = startIndex * itemHeight;</span><br><span class="line">                        state.list = longList.slice(startIndex, endIndex).map((it, i) =&gt; (&#123;</span><br><span class="line">                            ...it,</span><br><span class="line">                            position: scrollPos + i * itemHeight</span><br><span class="line">                        &#125;));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                return &#123;</span><br><span class="line">                    ...toRefs(state),</span><br><span class="line">                    totalHeight,</span><br><span class="line">                    ... methods</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        app.mount(&#x27;#app&#x27;)</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>vue h5 弹幕效果</title>
    <url>/barrage/</url>
    <content><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;section class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;!-- 弹幕盒子 --&gt;</span><br><span class="line">        &lt;div class=&quot;bullet-chat&quot;&gt;</span><br><span class="line">            &lt;!-- 弹幕 --&gt;</span><br><span class="line">            &lt;div class=&quot;dmGroup&quot; v-for=&quot;(item,index) in dmData&quot; :key=&quot;index&quot;</span><br><span class="line">                v-bind:style=&quot;&#123;top:item.top +&#x27;%&#x27;,animationDuration:item.delayTime + &#x27;s&#x27;,animationTimingFunction:&#x27;linear&#x27;,animationDelay:item.timeRequired +&#x27;ms&#x27;,animationPlayState:&#x27;running&#x27;&#125;&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;dmItem&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;dm&quot; :style=&quot;&#123;border:item.borderColor? &#x27;1px solid #FF703E&#x27;:&#x27;none&#x27;&#125;&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;avatarBox&quot;&gt;</span><br><span class="line">                            &lt;img :src=&quot;item.avatar&quot; class=&quot;avatar&quot; /&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;span class=&quot;messages&quot; :style=&quot;&#123;color:item.color&#125;&quot;&gt;&#123;&#123; item.nickname &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;section/&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*弹幕样式*/</span><br><span class="line">/* // 弹幕 */</span><br><span class="line">.dmGroup &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 70px;</span><br><span class="line">    left: 100%;</span><br><span class="line">    z-index: 10;</span><br><span class="line">    animation-timing-function: linear;</span><br><span class="line">    animation-fill-mode: none;</span><br><span class="line">    transform: translateZ(0);</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    height: 30px;</span><br><span class="line">    animation: dmAnimation 5s linear 2s alternate;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.dmItem &#123;</span><br><span class="line">    margin-right: 30px;</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.dmItem .dm &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    vertical-align: middle;</span><br><span class="line">    align-items: center;</span><br><span class="line">    position: relative;</span><br><span class="line">    max-width: 250px;</span><br><span class="line">    padding: 4px 4px 4px 4px;</span><br><span class="line">    background: rgba(0,0,0,.7) !important;</span><br><span class="line">    border-radius: 20px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    color: rgba(255, 255, 255, 1);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.dmItem .avatarBox &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 20px;</span><br><span class="line">    height: 20px;</span><br><span class="line">    margin-right: 4px;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.dmItem .avatarBox .avatar &#123;</span><br><span class="line">    width: 20px;</span><br><span class="line">    height: 20px;</span><br><span class="line">    border: 0;</span><br><span class="line">    border-radius: 50%;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.dmItem .dm .messages &#123;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    margin-right: 5px;</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">@keyframes dmAnimation &#123;</span><br><span class="line">    from &#123;</span><br><span class="line">        left: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    to &#123;</span><br><span class="line">        left: -100%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.barrage_area &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 10rem;</span><br><span class="line">    position: relative;</span><br><span class="line">    background: #aaa;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/* 弹幕 */</span><br></pre></td></tr></table></figure>

<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data()&#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        //弹幕消息</span><br><span class="line">        dmData: [],</span><br><span class="line">        //弹幕消息栈</span><br><span class="line">        dmDataFu: [&#123;</span><br><span class="line">                avatar: &#x27;https://img01.yzcdn.cn/vant/cat.jpeg&#x27;,</span><br><span class="line">                id: 17288,</span><br><span class="line">                nickname: &#x27;6666&#x27;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                avatar: &#x27;https://img01.yzcdn.cn/vant/cat.jpeg&#x27;,</span><br><span class="line">                id: 17312,</span><br><span class="line">                nickname: &#x27;哈哈哈哈阿萨撒旦发生飞洒啊是&#x27;,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                avatar: &#x27;https://img01.yzcdn.cn/vant/cat.jpeg&#x27;,</span><br><span class="line">                id: 17312,</span><br><span class="line">                nickname: &#x27;哈哈哈哈阿萨撒旦发生飞洒啊是&#x27;,</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                avatar: &#x27;https://img01.yzcdn.cn/vant/cat.jpeg&#x27;,</span><br><span class="line">                id: 17312,</span><br><span class="line">                nickname: &#x27;哈哈哈哈阿萨撒旦发生飞洒啊是&#x27;,</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                avatar: &#x27;https://img01.yzcdn.cn/vant/cat.jpeg&#x27;,</span><br><span class="line">                id: 17312,</span><br><span class="line">                nickname: &#x27;哈哈哈哈阿萨撒旦发生飞洒啊是&#x27;,</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                avatar: &#x27;https://img01.yzcdn.cn/vant/cat.jpeg&#x27;,</span><br><span class="line">                id: 17312,</span><br><span class="line">                nickname: &#x27;哈哈哈哈阿萨撒旦发生飞洒啊是&#x27;,</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        //定时器</span><br><span class="line">        timer: null,</span><br><span class="line">        //定时器时间</span><br><span class="line">        timerS: 2500,</span><br><span class="line">        //计数器</span><br><span class="line">        num: -1,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">    //定时发送历史弹幕</span><br><span class="line">    isTime() &#123;</span><br><span class="line">        this.timer = setInterval(() =&gt; &#123;</span><br><span class="line">            this.num++;</span><br><span class="line">            if (this.num == this.dmDataFu.length - 1) &#123;</span><br><span class="line">                //清除定时器</span><br><span class="line">                clearInterval(this.timer);</span><br><span class="line">            &#125;</span><br><span class="line">            this.dmData.push(this.dmDataFu[this.num])</span><br><span class="line">        &#125;, this.timerS)</span><br><span class="line">    &#125;,</span><br><span class="line">    //处理弹幕参数</span><br><span class="line">    parameters() &#123;</span><br><span class="line">        const dmArr = [];</span><br><span class="line">        for (let i = 0; i &lt; this.dmDataFu.length; i++) &#123;</span><br><span class="line">            // 动画在开始前的延迟时间</span><br><span class="line">            const delayTime = Math.floor(Math.random() * 20) + 5;</span><br><span class="line">            // 动画执行一次的所需时间</span><br><span class="line">            const timeRequired = Math.floor(Math.random() * 300);</span><br><span class="line">            // const _time = time &lt; 6 ? 6 + i : time + i;</span><br><span class="line">            // 随机位置</span><br><span class="line">            const top = Math.floor(Math.random() * 50) + 1;</span><br><span class="line">            const _p = &#123;</span><br><span class="line">                id: this.dmDataFu[i].id,</span><br><span class="line">                nickname: this.dmDataFu[i].nickname,</span><br><span class="line">                avatar: this.dmDataFu[i].avatar,</span><br><span class="line">                top,</span><br><span class="line">                delayTime,</span><br><span class="line">                timeRequired,</span><br><span class="line">                //弹幕的字体颜色</span><br><span class="line">                color: &#x27;#fff&#x27;,</span><br><span class="line">                //显示弹幕边框</span><br><span class="line">                borderColor: false</span><br><span class="line">            &#125;;</span><br><span class="line">            dmArr.push(_p);</span><br><span class="line">        &#125;</span><br><span class="line">        this.dmDataFu = dmArr</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本文来自于: <a href="https://ilovefy.jaron.top/">https://ilovefy.jaron.top/</a></p>
]]></content>
  </entry>
</search>
